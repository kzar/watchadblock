OK MyFilters:
OK  hiding:FilterSet
OK  blocking:BlockingFilterSet

OK deleted cached_getselectors and cached_blockfilterstext, so getSelectors and getBlockFilters can die

OK FilterSet:
OK  fromText*s*
OK  items['global'|domain] -> [ Filter, ... ]
OK  exclude[domain] -> [ Filter, ... ]
OK  _viewFor(domain): return a new FilterSet instance limited to the domain in question (and 'global')
OK  filtersFor(domain):
OK    f = this._viewFor(domain)
OK    return f.items.to_set.minus(f.exclude).to_list
  
OK  matches(domain):
OK    (move _matchCache into here)
OK    limited = this._viewFor(domain);
OK    for each entry in limited.items:
OK      if entry.matches() and entry not in any of limited.excludes:
OK        return true
OK    return false

OK BlockingFilterSet:
OK  pattern:FilterSet
OK  whitelist:FilterSet
OK  matches:
OK    if whitelist.matches(): return false
OK    if pattern.matches(): return true
OK    return false

OK get_content_script_data:
OK  selectors = _myfilters.hiding.filtersFor(domain).map(|f| f.selector)
OK  pattern = _myfilters.blocking.pattern.filtersFor(domain).map(|f| f._text)
OK  whitelist = _myfilters.blocking.whitelist.filtersFor(domain).map(|f| f._text)

OK adblock_start:
OK  blockers = new BlockingFilterSet(FilterSet.fromTexts(pattern), FilterSet.fromTexts(whitelist))

OK change adblock_start and resourceblock use of FilterText.fromText to fromText*s*

OK fix broken page_is_whitelisted (refers to FilterSet._whitelisted)

OK delete Filter.__type
OK delete limitedToDomain
OK delete appliesToDomain
