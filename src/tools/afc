#!/bin/bash

function usage() {
    echo "Usage:"
    echo "$0 shipit"
    echo "$0 filterdiff"
    echo "$0 updatefilters"
    echo "$0 bump"
    echo
    echo "This may be useful:"
    echo
    echo "    http://adblockforchrome.googlecode.com/svn/trunk/filters/adblock_custom.txt"
    echo
    exit 1
}

function shipit() {
    grep 'debug_id.*true;' functions.js && {
      echo "Fix debug_id, stupid"
      exit 1
    }

    [ "$(basename $(pwd))" = 'trunk' ] || {
      echo "Sorry, you must run this from trunk."
      exit 1
    }

    v=$(grep '"version"' manifest.json | cut -d '"' -f 4)
    echo Zipping...
    # Zip the extension
    rm -f ../extension-version-*.zip && \
      (cd ..; zip -x '*/app/manifest.json' -x '*/.svn/*' -x '*/tools/*' -x '*/filters/*' -r "extension-version-$v.zip" trunk/ >/dev/null )

    # Zip the app (same thing, but swap out the manifest))
    # Temp: drop nb _locale
    rm -f ../APP-VERSION-*.zip && (
      mv manifest.json manifest.json.tmp && mv app/manifest.json manifest.json && mv manifest.json.tmp app/manifest.json && \
      (cd ..; zip -x '*/app/manifest.json' -x '*/_locales/nb/*' -x '*/.svn/*' -x '*/tools/*' -x '*/filters/*' -r "APP-VERSION-$v.zip"      trunk/ >/dev/null ) && \
      mv manifest.json manifest.json.tmp && mv app/manifest.json manifest.json && mv manifest.json.tmp app/manifest.json
    )
    echo

    version=$(grep '"version"' manifest.json | cut -d '"' -f 4)
    svn up ../wiki/Changelog.wiki >/dev/null 2>&1
    grep "$version" ../wiki/Changelog.wiki && {
        echo -n "Did you forget to bump the version in manifest.json (y/n)? "
        read answer
        [ "$answer" = "y" ] && exit 1
        skip_changelog=1
    }

    if [ "$skip_changelog" != 1 ]; then
        echo -n "Changelog entry: *$version*: "
        read description
        sed -i "s/== Versions ==/== Versions ==\n\n*$version*: $description/" ../wiki/Changelog.wiki
    fi
    echo
    grep -A 3 -B 3 "$version" ../wiki/Changelog.wiki
    echo
    echo -n "Check in wiki and code, and make a tag for the release (y/n)? "
    read answer
    [ "$answer" = y ] && {
      cd ..
      svn cp trunk tags/$version || {
        echo "Couldn't make tags/$version.  Aborting checkin."
        exit 1
      }
      svn ci wiki/Changelog.wiki trunk tags/$version -m "Release new version $version: $description"
    }

    echo "Last step: push extension-version-$v.zip and APP-VERSION-$v.zip to the Store, and ship Safari if you want."
}

function bump() {
    v=$(grep '"version"' manifest.json | cut -d '"' -f 4)
    [ -z "$v" ] && { echo "No version found."; exit 1; }
    nextv=$(echo $v | cut -d '.' -f 1,2).$(( $(echo $v | cut -d . -f 3) + 1 ))
    sed -i "s/$v/$nextv/g" manifest.json app/manifest.json Info.plist
    echo "Before and after:"
    echo
    svn diff manifest.json app/manifest.json Info.plist | egrep '^ *[-+]'
    echo
    echo "svn revert -R manifest.json app/manifest.json Info.plist # if you aren't happy."
    echo
}

function main() {
    if [ $1 = "shipit" ]; then shipit
    elif [ $1 = "filterdiff" ]; then diff -b <(curl http://chromeadblock.com/filters/adblock_custom.txt 2>/dev/null) filters/adblock_custom.txt | less
    elif [ $1 = "updatefilters" ]; then 
        sed -i 's%^! Last update: .*$%! Last update: '"$(date)%" filters/adblock_custom.txt
        head -3 filters/adblock_custom.txt
        echo -n "Press enter to proceed or Ctrl-C to abort: "
        read
        svn ci filters/adblock_custom.txt -m "Shipping AdBlock Custom filter list to deployment" && \
        scp filters/adblock_custom.txt nathanlong@chromeadblock.com:webapps/mg_chromeadblock_com/filters/
    elif [ $1 = "bump" ]; then bump
    else usage
    fi
}

cd $(dirname $0)
cd ..
[ $# != 1 ] && usage
main "$1"
